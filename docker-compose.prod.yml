version: '3.8'

services:
  
  api:
    build: 
      context: ./backend/src
      dockerfile: Dockerfile.prod
    restart: always
    expose:
      - 80
    env_file:
        - ./.env.backend.prod
    depends_on:
      - db
  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    ports:
      - "5432:5432"
    env_file:
        - ./.env.bd.prod
      
  
  frontend:
    build:
      context: ./frontend/
      target: production
    restart: always
    expose:
      - "80"
    env_file:
        - ./.env.frontend.prod

  nginx-proxy:  
    container_name: nginx-proxy
    #build: nginx
    image: jwilder/nginx-proxy:latest
    restart: always
    ports:
      - 444:443
      - 81:80
    volumes:
      - ./certs:/etc/nginx/certs
      - ./html:/usr/share/nginx/html
      - ./vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
      
#  nginx-proxy-letsencrypt:
#    image: jrcs/letsencrypt-nginx-proxy-companion
#    env_file:
#      - ./.env.prod.proxy-companion
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock:ro
##     - certs:/etc/nginx/certs
#      - html:/usr/share/nginx/html
#      - vhost:/etc/nginx/vhost.d
#      - acme:/etc/acme.sh
#    depends_on:
#      - nginx-proxy

#To persist the data beyond the life of the container we configured a volume. This config will bind postgres_data to the "/var/lib/postgresql/data/" directory in the container.
volumes:
  postgres_data:
  certs:
  html:
  vhost:
  acme:

#https://stackoverflow.com/questions/34688465/how-do-i-run-a-sql-file-of-inserts-through-docker-run