version: '3.8'

services:
  
  api:
    build: ./backend/src
    restart: always
    command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 8000
    volumes:
      - ./backend/src/:/usr/src/app/
    ports:
      - 8000:8000
    expose:
      - 8000
    env_file:
        - ./.env.prod
  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=cclimaticouser
      - POSTGRES_PASSWORD=cc123
      - POSTGRES_DB=cambioclimatico
  
  frontend:
    build:
      context: ./frontend/
      target: production
    restart: always
    #ports:
    #  - "81:80"
    #  - "444:443"
    expose:
      - 80
    environment:
      - VIRTUAL_PORT=80
    #volumes:
    #  - ./frontend/nginx:/etc/nginx/conf.d
    #command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - api

  nginx-proxy:
    container_name: nginx-proxy
    #build: nginx
    image: jwilder/nginx-proxy:0.9
    restart: always
    ports:
      - 444:443
      - 81:80
    volumes:
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - api
      - frontend
  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    env_file:
      - ./.env.prod.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy

#To persist the data beyond the life of the container we configured a volume. This config will bind postgres_data to the "/var/lib/postgresql/data/" directory in the container.
volumes:
  postgres_data:
  certs:
  html:
  vhost:
  acme:

#https://stackoverflow.com/questions/34688465/how-do-i-run-a-sql-file-of-inserts-through-docker-run